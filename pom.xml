<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.leyou.parent</groupId>
    <artifactId>leyou</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <modules>
        <module>ly-registry</module>
        <module>ly-gateway</module>
        <module>ly-item</module>
        <module>ly-common</module>
        <module>ly-upload</module>
        <module>ly-search</module>
        <module>ly-page</module>
        <module>ly-sms</module>
        <module>ly-user</module>
        <module>ly-auth-center</module>
        <module>ly-cart</module>
        <module>ly-order</module>
    </modules>
    <name>leyou</name>
    <description>Demo project for Spring Boot</description>
    <packaging>pom</packaging>
    <!-- maven工程中pom jar war的区别-->
    <!-- 1.pom:  用在父工程中或者聚合工程中，做jar包的版本控制
         2.jar： 将会打包成jar包，用作jar包使用
         3.war： 将会打包成war，发布在服务器上的工程。如网站或服务 -->

    <!-- https://docs.spring.io/spring-boot/docs/2.1.5.RELEASE/reference/htmlsingle/#using-boot-maven-->
    <!-- lookup parent from repository -->
    <!-- 用来做父版本的版本控制
        spring-boot-starter-parent依赖了spring-boot-dependencies管理项目中所有要使用到的jar包版本
        这样写其他工程的pom文件中maven依赖就不需要写版本号了-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.1.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Finchley.SR1</spring-cloud.version>
        <mapper.starter.version>2.0.3</mapper.starter.version>
        <mysql.version>8.0.28</mysql.version>
        <pageHelper.starter.version>1.2.5</pageHelper.starter.version>
        <leyou.latest.version>1.0.0-SNAPSHOT</leyou.latest.version>
        <fastDFS.client.version>1.26.1-RELEASE</fastDFS.client.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- springCloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 通用Mapper启动器 -->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper-spring-boot-starter</artifactId>
                <version>${mapper.starter.version}</version>
            </dependency>
            <!-- 分页助手启动器 -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper-spring-boot-starter</artifactId>
                <version>${pageHelper.starter.version}</version>
            </dependency>
            <!-- mysql驱动 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!--FastDFS客户端-->
            <dependency>
                <groupId>com.github.tobato</groupId>
                <artifactId>fastdfs-client</artifactId>
                <version>${fastDFS.client.version}</version>
            </dependency>
            <!--<dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-actuator</artifactId>
                <version>2.0.0.RELEASE</version>
            </dependency>-->
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>
    </dependencies>
<!--    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>-->
    <!--
        1.dependencyManagement
            只是声明依赖，并不实现引入，因此子项目需要显示的声明需要用的依赖。
            如果不在子项目中声明依赖，是不会从父项目中继承下来的；
            只有在子项目中写了该依赖项，并且没有指定具体版本，才会从父项目中继承该项，并且version和scope都读取自父pom;
            另外如果子项目中指定了版本号，那么会使用子项目中指定的jar版本。
        2.dependencies
            即使在子项目中不写该依赖项，那么子项目仍然会从父项目中继承该依赖项（全部继承）

        优点：
            1.统一管理项目的版本号，确保应用的各个项目的依赖和版本一致，才能保证测试的和发布的是相同的成果，
                因此，在顶层pom中定义共同的依赖关系。
            2.想升级或者切换到另一个版本时，只需要在父类容器里更新，不需要任何一个子项目的修改；
                如果某个子项目需要另外一个版本号时，只需要在dependencies中声明一个版本号即可。
                子类就会使用子类声明的版本号，不继承于父类版本号。
    -->

</project>